<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gbhu.dao.VideoOrderMapper">

    <!--
    eviction:代表的是缓存回收策略略，常⻅见下⾯面两种。
    (1) LRU,最近最少使⽤用的，⼀一处最⻓长时间不不⽤用的对象
    (2) FIFO,先进先出，按对象进⼊入缓存的顺序来移除他们
    flushInterval:刷新间隔时间，单位为毫秒，这⾥里里配置的是100秒刷新，如果不不配置
    它，当SQL被执⾏行行的时候才会去刷新缓存。
    size:引⽤用数⽬目，代表缓存最多可以存储多少个对象，设置过⼤大会导致内存溢出
    readOnly:只读，缓存数据只能读取⽽而不不能修改，默认值是false
    -->
    <cache eviction="LRU" flushInterval="100000" readOnly="true" size="1024"/>

    <resultMap id="VideoOrderResultMap" type="VideoOrder">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="out_trade_no" property="outTradeNo"/>
        <result column="state" property="state"/>
        <result column="create_time" property="createTime"/>
        <result column="total_fee" property="totalFee"/>
        <result column="video_id" property="videoId"/>
        <result column="video_img" property="videoImg"/>
        <!--association
        property 对应Order里User的属性名
        User 这是属性的类型
        -->
        <association property="user" javaType="User">
            <id column="id" property="userId"/>
            <result column="name" property="name"/>
            <result column="pwd" property="pwd"/>
            <result column="head_img" property="headImg"/>
            <result column="phone" property="phone"/>
            <result column="create_time" property="createTime"/>
        </association>
    </resultMap>

    <select id="selectOrderAndUser" resultMap="VideoOrderResultMap">
        select o.id,
               o.user_id,
               o.out_trade_no,
               o.state,
               o.create_time,
               o.total_fee,
               o.video_id,
               o.video_img,
               u.name,
               u.pwd,
               u.head_img,
               u.phone,
               u.create_time
        from video_order o
                 left join user u
                           on o.user_id = u.id
        where
           o.id=#{order_id}
    </select>


    <resultMap id="VideoOrderResultMapLazy" type="VideoOrder">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="out_trade_no" property="outTradeNo"/>
        <result column="state" property="state"/>
        <result column="create_time" property="createTime"/>
        <result column="total_fee" property="totalFee"/>
        <result column="video_id" property="videoId"/>
        <result column="video_img" property="videoImg"/>
        <result column="video_title" property="videoTitle"/>
        <association property="user" javaType="User" select="findOrderByUserId" column="user_id"/>
    </resultMap>

    <select id="selectOrderAndUserLazy" resultMap="VideoOrderResultMapLazy">
        select o.id,
               o.user_id,
               o.out_trade_no,
               o.state,
               o.create_time,
               o.total_fee,
               o.video_id,
               o.video_img,
               o.video_title
        from video_order o
        where
            o.id=#{order_id}
    </select>

    <select id="findOrderByUserId" resultType="User">
        select * from user where id=#{user_id}
    </select>
</mapper>