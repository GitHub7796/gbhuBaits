<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace 名称空间，保持全局唯一
最好与dao层 java接口一致
可以映射sql 到对应的方法名、返回类型

mybatis 动态代理
-->
<mapper namespace="com.gbhu.dao.VideoMapper">

    <cache eviction="LRU" flushInterval="100000" readOnly="true" size="1024"/>
    <sql id="base_video_field">
        id
        ,title,summary,cover_img
    </sql>
    <insert id="addVideo" useGeneratedKeys="true" keyProperty="videoId" keyColumn="id">
        INSERT INTO video (`title`, `summary`, `cover_img`, `price`, `create_time`, `point`)
        VALUES (#{title,jdbcType=VARCHAR},
                #{summary,jdbcType=VARCHAR},
                #{coverImg,jdbcType=VARCHAR},
                #{price,jdbcType=INTEGER},
                #{createTime,jdbcType=TIMESTAMP},
                #{point,jdbcType=DOUBLE});

    </insert>
    <insert id="addBatch" useGeneratedKeys="true" keyProperty="videoId" keyColumn="id">
        INSERT INTO video (`title`, `summary`, `cover_img`, `price`, `create_time`, `point`)
        VALUES
        <foreach collection="list" item="video" separator=",">
            (
            #{video.title,jdbcType=VARCHAR},
            #{video.summary,jdbcType=VARCHAR},
            #{video.coverImg,jdbcType=VARCHAR},
            #{video.price,jdbcType=INTEGER},
            #{video.createTime,jdbcType=TIMESTAMP},
            #{video.point,jdbcType=DOUBLE}
            )
        </foreach>
    </insert>
    <!--    <update id="updateById" parameterType="com.gbhu.domain.Video">-->
    <update id="updateById" parameterType="Video" >
        update video
        set title=#{title,jdbcType=VARCHAR},
            summary=#{summary,jdbcType=VARCHAR},
            cover_img=#{coverImg,jdbcType=VARCHAR},
            price=#{price,jdbcType=INTEGER},
            create_time=#{createTime,jdbcType=TIMESTAMP},
            point=#{point,jdbcType=DOUBLE}
        where id = #{videoId}
    </update>

    <update id="updateByIdActive">
        update video
        <trim prefix="set" suffixOverrides=",">
            <if test="title !=null">title=#{title,jdbcType=VARCHAR},</if>
            <if test="summary !=null">summary=#{summary,jdbcType=VARCHAR},</if>
            <if test="coverImg !=null">cover_img=#{coverImg,jdbcType=VARCHAR},</if>
            <if test="price !=null">price=#{price,jdbcType=INTEGER},</if>
            <if test="createTime !=null">create_time=#{createTime,jdbcType=TIMESTAMP},</if>
            <!-- 特别注意： ⼀一定要看pojo类⾥里里⾯面的是基本数据类型，还是包装数据类型-->
            <if test="point !=null">point=#{point,jdbcType=DOUBLE},</if>
        </trim>
        where id=#{videoId}
    </update>
    <delete id="deleteByTimeAndPrice" parameterType="java.util.Map">
        delete
        from video
        where create_time <![CDATA[ >= ]]>  #{createTime}
          and price <![CDATA[ <= ]]> #{price}
    </delete>

    <!--statement
        id:当前mapper下唯一
        resultType：sql结果的封装
        -->
    <select id="selectById"
            parameterType="java.lang.Integer"
            resultType="com.gbhu.domain.Video">
        <!--     select *
    rom video
     where id = #{video_id,jdbcType=INTEGER}-->
        select
        <include refid="base_video_field"/>
        from video where id = #{video_id,jdbcType=INTEGER}
    </select>
    <select id="selectListByXML" resultType="Video">
        <!--        select *
            from video}-->
        select
        <include refid="base_video_field"/>
        from video
    </select>
    <!--    <select id="selectByPointAndTitleLike" resultType="com.gbhu.domain.Video">-->
    <select id="selectByPointAndTitleLike" resultType="Video">
        select *
        from video
        where point = #{point}
          and title like concat('%', #{title}, '%')
    </select>

    <resultMap id="VideoResultMap" type="Video">
        <id column="id" property="videoId" jdbcType="VARCHAR"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="summary" property="summary" jdbcType="VARCHAR"/>
        <result column="cover_img" property="coverImg" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="selectByResultMap" resultMap="VideoResultMap">
        select id, title, summary, cover_img
        from video
        where id = #{video_id,j}
    </select>
</mapper>